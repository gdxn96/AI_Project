#include "stdafx.h"
#include "Game.h"
#include "Astronaut.h"

Game::Game(Vector2D screenSize, Vector2D levelSize) : 
	m_screenSize(screenSize),
	m_levelSize(levelSize), 
	m_camera(screenSize, levelSize)
{
<<<<<<< HEAD
	Player* player = new Player(Rect(Vector2D(950, 530), Vector2D(20, 20)),	//bounds
									Vector2D(800, 800),							//accel
									Vector2D(400, 400),							//maxSpeed
									true);										//isMiniMapObject
 
	InputManager* input = InputManager::getInstance();

	input->AddListener(static_cast<int>(EventListener::KeyDownEvent::UP), player);
	input->AddListener(static_cast<int>(EventListener::KeyDownEvent::LEFT), player);
	input->AddListener(static_cast<int>(EventListener::KeyDownEvent::DOWN), player);
	input->AddListener(static_cast<int>(EventListener::KeyDownEvent::RIGHT), player);
	input->AddListener(static_cast<int>(EventListener::KeyUpEvent::UP), player);
	input->AddListener(static_cast<int>(EventListener::KeyUpEvent::LEFT), player);
	input->AddListener(static_cast<int>(EventListener::KeyUpEvent::DOWN), player);
	input->AddListener(static_cast<int>(EventListener::KeyUpEvent::RIGHT), player);
	input->AddListener(static_cast<int>(EventListener::GenericEvent::SHOOT), player);
	input->AddListener(static_cast<int>(EventListener::GenericEvent::NO_SHOOT), player);

	m_gameObjects.push_back(player);
=======
	float terrainPeak = screenSize.h * 7.f / 10;
	float terrainTrough = screenSize.h * 8.f / 10;

	m_gameObjects.push_back(new Terrain(terrainPeak, terrainTrough, levelSize));
	m_gameObjects.push_back(new Astronaut(Rect(950, screenSize.h - 150, 10, 20), true));
>>>>>>> 4d0f93be3f91522f622f1be3183adc6ee2602bec
}

void Game::Update(float dt)
{
	for (GameObject* gameObject : m_gameObjects)
	{
		gameObject->Update(dt);
	}
}

<<<<<<< HEAD
void Game::Draw(sf::RenderWindow& r)
{
	for (GameObject* gameObject : m_gameObjects)
	{
		gameObject->Draw(r);
	}
}
=======
void Game::Draw(sf::RenderWindow & r)
{
	m_camera.RenderObjects(r, m_gameObjects);
}
>>>>>>> 4d0f93be3f91522f622f1be3183adc6ee2602bec
